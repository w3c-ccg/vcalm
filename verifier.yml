openapi: 3.0.0
servers:
  - url: https://verifier.qa.veres.app/verifiers/z1A45ZhWEGMeibHrB15nv8Gk6
    description: Veres Issuer (Quality Assurance)
info:
  version: "0.0.3-unstable"
  title: VC Verifier API
  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-api
paths:
  /credentials/verify:
    post:
      summary: Verifies a verifiableCredential and returns a verificationResult in the response body.
      tags:
       - Credentials
      security:
       - networkAuth: []
       - oAuth2: []
       - zCap: []
      operationId: verifyCredential
      x-expectedCaller: "Verification Coordinator"
      description: Verifies a verifiableCredential and returns a verificationResult in the response body.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/VerifyCredentialRequest"
                - $ref: "#/components/schemas/VerifyEnvelopedCredentialRequest"
        description: Parameters for verifying a verifiableCredential.
      responses:
        "200":
          description: Verifiable Credential successfully verified!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyCredentialResponse"
        "400":
          description: invalid input!
  /presentations/verify:
    post:
      summary: Verifies a Presentation and all Verifiable Credentials it contains, returning detailed verification results.
      tags:
       - Presentations
      security:
       - networkAuth: []
       - oAuth2: []
       - zCap: []
      operationId: verifyPresentation
      x-expectedCaller: "Verification Coordinator"
      description: |
        Verifies a verifiablePresentation and, by default, all verifiable credentials
        contained within it.
        
        The verification process includes verifying the presentation's own proof (including domain
        and challenge validation, if provided); verifying each contained verifiable credential's proof, 
        status, and validity period(s); and checking that the holder in the presentation matches the
        verification method used in the presentation's proof.
        
        Business rule validation (such as verifying that credential subjects match the presentation holder)
        is outside the scope of this verification endpoint and should be performed by the calling application.

        The API is compositional: when credential verification is disabled or limited via 
        implementation-specific options, individual credentials can be verified separately 
        using the <code>/credentials/verify</code> endpoint.
        
        Given the possibility of denial of service, buffer overflow, or other attacks, an implementation 
        is permitted to apply rate limits or otherwise restrict requests against this API endpoint 
        as needed using a <code>413</code>, <code>429</code>, or other response error code as appropriate.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/VerifyPresentationRequest"
                - $ref: "#/components/schemas/ProoflessVerifyPresentationRequest"
                - $ref: "#/components/schemas/VerifyEnvelopedPresentationRequest"
        description: Parameters for verifying a verifiablePresentation.
      responses:
        "200":
          description: |

            Verification process completed successfully. The response body contains detailed results 
            indicating whether the presentation and its contained credentials passed or failed verification. 
            A <code>200</code> status indicates the verification process itself succeeded, regardless of whether 
            the presentation and/or credentials were determined to be valid or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyPresentationResponse"
        "400":
          description: |
            Invalid or malformed input that prevented the verification process from being performed. 
            This indicates issues with the request format, structure, or parameters, rather than 
            verification failures.
        "413":
          description: Payload too large
        "429":
          description: Request rate limit exceeded.
  /challenges:
    post:
      summary: Passing an empty body to this endpoint creates and returns a challenge string in the response body.
      security:
       - networkAuth: []
       - oAuth2: []
       - zCap: []
      operationId: challenge
      x-expectedCaller: "Verification Coordinator"
      description: Creates a challenge to be used as `options.challenge` in future requests.
      responses:
        "200":
          description: Challenge created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateChallengeResponse"
        "400":
          description: Invalid or malformed input
components:
  securitySchemes:
    $ref: "./components/SecuritySchemes.yml#/components/securitySchemes"
  schemas:
    VerifyCredentialRequest:
      type: object
      properties:
        verifiableCredential:
          $ref: "./components/VerifiableCredential.yml#/components/schemas/VerifiableCredential"
        options:
          $ref: "./components/VerifyCredentialOptions.yml#/components/schemas/VerifyCredentialOptions"
    VerifyEnvelopedCredentialRequest:
      type: object
      properties:
        verifiableCredential:
          $ref: "./components/EnvelopedVerifiableCredential.yml#/components/schemas/EnvelopedVerifiableCredential"
        options:
          $ref: "./components/VerifyCredentialOptions.yml#/components/schemas/VerifyCredentialOptions"
    VerifyCredentialResponse:
      $ref: "./components/VerifyCredentialResult.yml#/components/schemas/VerificationResult"
    VerifyPresentationRequest:
      type: object
      properties:
        verifiablePresentation:
          $ref: "./components/VerifiablePresentation.yml#/components/schemas/VerifiablePresentation"
        options:
          $ref: "./components/VerifyPresentationOptions.yml#/components/schemas/VerifyPresentationOptions"
    VerifyEnvelopedPresentationRequest:
      type: object
      properties:
        verifiablePresentation:
          $ref: "./components/EnvelopedVerifiablePresentation.yml#/components/schemas/EnvelopedVerifiablePresentation"
        options:
          $ref: "./components/VerifyPresentationOptions.yml#/components/schemas/VerifyPresentationOptions"
    ProoflessVerifyPresentationRequest:
      type: object
      properties:
        presentation:
          $ref: "./components/Presentation.yml#/components/schemas/Presentation"
    VerifyPresentationResponse:
      $ref: "./components/VerifyPresentationResult.yml#/components/schemas/VerificationResult"
    CreateChallengeResponse:
      $ref: "./components/Challenge.yml#/components/schemas/CreateChallengeResult"
