openapi: 3.0.0
info:
  version: "0.0.3-unstable"
  title: VC API
  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-api
paths:
components:
  schemas:
    VerificationResult:
      type: object
      additionalProperties: false
      description: Object to report the result of a verification process on a VerifiablePresentation.
      properties:
        verified:
          type: boolean
          description: Overall verification assertion of the VerifiablePresentation. This is set to 
            <code>true</code> if the VerifiablePresentation and all checked VerifiableCredentials 
            passed verification; otherwise, <code>false</code>. See error handling section for more 
            guidance around errors and warnings, and validation and verification steps.
        verifiablePresentation:
          type: object
          description: The VerifiablePresentation used as the verification input.
        problemDetails:
          type: array
          description: Array consisting of ProblemDetails objects for overall presentation-level issues.
          items:
            $ref: "./ProblemDetails.yml#/components/schemas/ProblemDetails"
        results:
          type: object
          additionalProperties: false
          description: Detailed verification results for both VerifiablePresentation and all 
            VerifiableCredentials contained within it, by default. Keys are mapped to properties 
            from the Verifiable Credential Data Model which are subject to validations.
          properties:
            presentation:
              type: object
              additionalProperties: false
              description: Verification results specific to the VerifiablePresentation itself 
                (not its contained VerifiableCredentials).
              properties:
                challenge:
                  type: object
                  description: If provided in the verification options, the result of validating 
                    the security challenge across all proofs provided.
                  properties:
                    valid:
                      type: boolean
                      description: Result of validating the security challenge across all proofs provided.
                    input:
                      type: string
                      description: The challenge input string.
                domain:
                  type: object
                  description: If provided in the verification options, the result of validating the 
                    security domain across all proofs provided.
                  properties:
                    valid:
                      type: boolean
                      description: Result of validating the security domain across all proofs provided.
                    input:
                      type: string
                      description: The security domain input string.
                holder:
                  type: object
                  description: Result from validating the holder, if any.
                  properties:
                    valid:
                      type: boolean
                      description: Result of validating the holder.
                    input:
                      type: string
                      description: The holder input string.
                proof:
                  type: array
                  description: Results from validating the proof objects if any.
                  items:
                    type: object
                    description: Results from validating a proof object.
                    properties:
                      valid:
                        type: boolean
                        description: Results of validating the proof object.
                      input:
                        type: object
                        description: The proof object.
                      problemDetails:
                        type: array
                        description: Issues sepecific to this proof.
                        items:
                          $ref: "./ProblemDetails.yml#/components/schemas/ProblemDetails"
            credentials:
              type: array
              description: Detailed verification results for each VerifiableCredential in the VerifiablePresentation.
              items:
                $ref: "./VerifyCredentialResult.yml#/components/schemas/VerificationResult"
      example: {
        "verified": false,
        "verifiablePresentation": {},
        "problemDetails": [
          {
            "type": "https://www.w3.org/TR/vc-data-model-2.0/#PARSING_ERROR",
            "title": "Parsing error",
            "description": "There was a parsing error on line 32, column 5: A comma was expected after the \" character."
          }
        ],
        "results": {
          "presentation": {
            "challenge": {
              "valid": true,
              "input": "d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8"
            },
            "domain": {
              "valid": true,
              "input": "example.com"
            },
            "holder": {
              "valid": true,
              "input": "did:example:123"
            },
            "proof": [{
              "valid": true,
              "input": {
                "type": "DataIntegrityProof",
                "cryptosuite": "eddsa-rdfc-2022",
                "created": "2020-04-02T18:28:08Z",
                "verificationMethod": "did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN",
                "proofPurpose": "authentication",
                "proofValue": "z5h8W7qJkNrhGjJHWxZ8oN5h8gYZ4h8x7h5b8k2dqKwJ5J8j7h5k8m3qKvJ2j7qJ5h8gYZ4h8x7h5b8k2dqKwJ5J8j7h5k8m3qKvJ2j7qJ5h8gYZ4h8x"
              },
              "problemDetails": []
            }
           ]
          },
          "credentials": [
            {
              "verified": true,
              "credential": {
                "@context": [
                  "https://www.w3.org/ns/credentials/v2",
                  "https://www.w3.org/ns/credentials/examples/v2"
                ],
                "id": "http://example.gov/credentials/3732",
                "type": ["VerifiableCredential", "DriverLicense"],
                "issuer": "did:example:dmv456",
                "validFrom": "2023-01-01T00:00:00Z",
                "validUntil": "2027-01-01T00:00:00Z",
                "credentialSubject": {
                  "id": "did:example:alice123",
                  "licenseNumber": "DL123456789"
                }
              },
              "problemDetails": [],
              "results": {
                "validFrom": {
                  "valid": true,
                  "input": "2023-01-01T00:00:00Z"
                },
                "validUntil": {
                  "valid": true,
                  "input": "2027-01-01T00:00:00Z"
                },
                "credentialStatus": [
                  {
                    "value": 0,
                    "valid": true,
                    "input": {
                      "id": "https://example.com/status/3#94567",
                      "type": "BitstringStatusListEntry",
                      "statusPurpose": "revocation",
                      "statusListIndex": "94567",
                      "statusListCredential": "https://example.com/status/3"
                    }
                  }
                ],
                "proof": [
                  {
                    "valid": true,
                    "input": {
                      "type": "DataIntegrityProof",
                      "cryptosuite": "eddsa-rdfc-2022",
                      "created": "2023-01-01T10:00:00Z",
                      "verificationMethod": "did:example:dmv456#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "z3dY5z8x7h5b8k2dqKwJ5J8j7h5k8m3qKvJ2j7qJ5h8gYZ4h8x7h5b8k2dqKwJ5J8j7h5k8m3qKvJ2j7qJ5h8gYZ4h8x7h5b8k2dqKwJ5J8j7h5k8m3qKvJ2j7qJ"
                    },
                    "problemDetails": []
                  }
                ]
              }
            },
            {
              "verified": false,
              "credential": {
                "@context": [
                  "https://www.w3.org/ns/credentials/v2",
                  "https://www.w3.org/ns/credentials/examples/v2"
                ],
                "id": "http://example.gov/credentials/3733",
                "type": ["VerifiableCredential", "UniversityDegree"],
                "issuer": "did:example:university789",
                "validFrom": "2020-01-01T00:00:00Z",
                "validUntil": "2022-12-31T23:59:59Z",
                "credentialSubject": {
                  "id": "did:example:alice123",
                  "degree": {
                    "type": "BachelorDegree",
                    "name": "Bachelor of Science"
                  }
                }
              },
              "problemDetails": [
                {
                  "type": "https://www.w3.org/TR/vc-data-model-2.0#CREDENTIAL_EXPIRED",
                  "title": "Credential expired",
                  "detail": "The credential's validUntil date of '2022-12-31T23:59:59Z' has passed."
                }
              ],
              "results": {
                "validFrom": {
                  "valid": true,
                  "input": "2020-01-01T00:00:00Z"
                },
                "validUntil": {
                  "valid": false,
                  "input": "2022-12-31T23:59:59Z"
                },
                "credentialStatus": [
                  {
                    "value": 0,
                    "valid": true,
                    "input": {
                      "id": "https://example.com/status/4#12345",
                      "type": "BitstringStatusListEntry",
                      "statusPurpose": "revocation",
                      "statusListIndex": "12345",
                      "statusListCredential": "https://example.com/status/4"
                    }
                  }
                ],
                "proof": [
                  {
                    "valid": true,
                    "input": {
                      "type": "DataIntegrityProof",
                      "cryptosuite": "eddsa-rdfc-2022",
                      "created": "2020-01-01T10:00:00Z",
                      "verificationMethod": "did:example:university789#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "z8m9N4p5q6r7s8t9u0v1w2x3y4z5a6b7c8d9e0f1g2h3i4j5k6l7m8n9o0p1q2r3s4t5u6v7w8x9y0z1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0t1u2v"
                    },
                    "problemDetails": []
                  }
                ]
              }
            }
          ]
        }
      }
