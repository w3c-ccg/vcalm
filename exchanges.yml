openapi: 3.0.0
info:
  version: "0.0.3-unstable"
  title: VC Exchanges API
  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-api
paths:
  /workflows:
    post:
      summary: Creates a new workflow and returns its information in the response body.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: createWorkflow
      description: Creates a new workflow and returns workflowId in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkflowRequest"
      responses:
        "200":
          description: Workflow successfully created!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
  /workflows/{localWorkflowId}:
    get:
      summary: Gets the configuration of an existing workflow and returns it in the response body.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: getWorkflowConfiguration
      description: Gets the configuration of an existing workflow and returns it in the response body.
      responses:
        "200":
          description: Workflow configuration retrieved!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWorkflowResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
  /workflows/{localWorkflowId}/exchanges:
    post:
      summary: Creates a new exchange and returns exchangeId and time to live in the response body.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: createExchange
      description: Creates a new exchange and returns exchangeId and time to live in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExchangeRequest"
      responses:
        "200":
          description: Exchange successfully created!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateExchangeResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
  /workflows/{localWorkflowId}/exchanges/{localExchangeId}:
    get:
      summary: Gets the state of an existing exchange and returns it in the response body.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: getExchangeConfiguration
      description: Gets the configuration of an existing exchange and returns it in the response body.
      responses:
        "200":
          description: Exchange configuration retrieved!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExchangeResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
    post:
      summary: Participate in an exchange. Posting an empty body will start the exchange or return what the exchange is expecting to complete the next step.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: participateInExchange
      description: Participate in an exchange. Posting an empty body will start the exchange or return what the exchange is expecting to complete the next step.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: "./components/VerifiablePresentation.yml#/components/schemas/VerifiablePresentation"
              - $ref: "./components/Credential.yml#/components/schemas/Credential"
        description: Either a credential to be issued or a Verifiable Presentation.
      responses:
        "200":
          description: Exchange progressed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExchangeParticipationResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
components:
  schemas:
    CreateWorkflowRequest:
      type: object
      additionalProperties: false
      description: Object containing information for creating a workflow.
      properties:
        required:
          type: object
          properties:
            steps:
              type: object
              properties:
                stepName:
                  $ref: "#/components/schemas/WorkflowStep"
            initialStep:
              type: string
              description: The step from the above set that the exchange starts on.
        options:
          type: object
          properties:
            controller:
              type: string
              description: The controller of the instance.
            authorization:
              type: object
              description: Authorization scheme information (e.g. OAuth2 configuration).
            credentialTemplates:
              type: array
              description: One or more VC templates for issuance.
              items:
                type: object
                properties:
                  type:
                    type: string
                  template:
                    type: string
    CreateWorkflowResponse:
      type: object
      additionalProperties: false
      description: Object containing information about a created workflow.
      properties:
        workflowId:
          type: string
          description: The URL that uniquely identifies the created workflow.
    GetWorkflowResponse:
      type: object
      additionalProperties: false
      description: Object containing information about a workflow.
      properties:
        required:
          type: object
          properties:
            exchanges:
              type: array
              description: The identifiers of the current exchanges associated with the workflow instance.
              items:
                type: string
            steps:
              type: object
              properties:
                stepName:
                  type: object
                  properties:
                    step:
                      $ref: "#/components/schemas/WorkflowStep"
            initialStep:
              type: string
              description: The step from the above set that the exchange starts on.
        options:
          type: object
          properties:
            controller:
              type: string
              description: The controller of the instance.
            authorization:
              type: object
              description: Authorization scheme information (e.g. OAuth2 configuration).
            credentialTemplates:
              type: array
              description: One or more VC templates for issuance.
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: The type of template.
                  template:
                    type: string
                    description: The template itself.
    CreateExchangeRequest:
      type: object
      additionalProperties: false
      description: Object containing information about the exchange to be created.
      properties:
        ttl:
          type: string
          description: Time to live for the exchange (ms).
        variables:
          type: array
          description: Template variables to be used in the exchange. MAY be empty.
          items:
            type: object
    CreateExchangeResponse:
      type: object
      additionalProperties: false
      description: Object containing information about a created exchange.
      properties:
        exchangeId:
          type: string
          description: The URL that uniquely identifies the exchange.
        sequence:
          type: string
          description: A sequence number for the exchange. Set to "0" on creation.
        ttl:
          type: string
          description: The time to live for the created exchange.
        variables:
          type: array
          description: Template variables to be used in the exchange.
          items:
            type: object
        state:
          type: string
          description: The status ("pending" | "complete" | "invalid") of the exchange, set to "pending" on creation.
        step:
          type: string
          description: The semantic string ID for the current step.
    ExchangeParticipationResponse:
      type: object
      additionalProperties: false
      description: Either what the exchange is expecting next or a result of the exchange.
      properties:
        response:
          oneOf:
            - type: object
              properties:
                verifiablePresentationRequest:
                  $ref: "./components/VerifiablePresentationRequest.yml#/components/schemas/VerifiablePresentationRequest"
            - type: object
              properties:
                verifiablePresentation:
                  $ref: "./components/VerifiablePresentation.yml#/components/schemas/VerifiablePresentation"
            - type: object
              properties:
                redirectUrl:
                  type: string
                  description: The URL the exchange wishes to redirect the client to.
    GetExchangeResponse:
      type: object
      additionalProperties: false
      description: Object containing information about an active exchange.
      properties:
        exchangeId:
          type: string
          description: The URL that uniquely identifies the exchange.
        ttl:
          type: string
          description: The time to live for the exchange.
        nextStep:
          type: string
          description: The interaction the exchange is expecting to happen next.
        completedSteps:
          type: array
          description: The steps completed by the exchange previously.
          items:
            type: string
    WorkflowStep:
      type: object
      additionalProperties: false
      description: Object containing information about a workflow step.
      oneOf:
        - $ref: "#/components/schemas/StepData"
        - type: object
          properties:
            stepTemplate:
              $ref: "#/components/schemas/StepTemplate"
    VerifiableCredentialTemplate:
      type: object
      additionalProperties: false
      description: A Verifiable Credential template.
      properties:
        type:
          type: string
          description: The type of template.
        template:
          type: string
          description: The VC template.
    StepTemplate:
      type: object
      additionalProperties: false
      description: A template for a workflow step. Either this must be present or the other step data must be present, but not both sets.
      properties:
        type:
          type: string
          description: The type of template.
        template:
          type: string
          description: The step template.
    StepData:
      type: object
      additionalProperties: false
      description: Step data to be included if a template is not used.
      properties:
        createChallenge:
          type: string
          description: 
        verifiablePresentationRequest:
          type: object
          description: The VPR to send to the user in this step.
          $ref: "./components/VerifiablePresentationRequest.yml#/components/schemas/VerifiablePresentationRequest"
        nextStep:
          type: string
          description: The name of the next step in the sequence.
        openId:
          type: object
          description: Optional information to trigger OID4VP
          properties:
            createAuthorizationRequest:
              type: string
              description: If present, auto-generate the OID4VP authorization request from the VPR. Either this or authorizationRequest must be present, but not both.
            authorizationRequest:
              type: object
