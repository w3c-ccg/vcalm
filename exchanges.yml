openapi: 3.0.0
servers:
  - url: https://verifier.qa.veres.app/verifiers/z1A45ZhWEGMeibHrB15nv8Gk6
    description: Veres Verifier (Quality Assurance)
info:
  version: "0.0.3-unstable"
  title: VC Exchanges and Workflows API
  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-api
paths:
  /workflows:
    post:
      summary: Creates a new workflow and returns location of workflow metadata in a response header.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: createWorkflow
      description: Creates a new workflow and returns location of workflow metadata in a response header.
      x-expectedCaller: Administrators
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkflowRequest"
      responses:
        "201":
          description: Workflow successfully created (with data)
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: The HTTP URL used to retrieve workflow metadata.
                example: https://issuer.example.com/workflows/123
        "204":
          description: Workflow successfully created (without data)
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: The HTTP URL used to retrieve workflow metadata.
                example: https://issuer.example.com/workflows/123
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
  /workflows/{localWorkflowId}:
    get:
      summary: Gets the configuration of an existing workflow and returns it in the response body.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: getWorkflowConfiguration
      description: Gets the configuration of an existing workflow and returns it in the response body.
      x-expectedCaller: Administrators
      parameters:
        - $ref: "./components/parameters/path/LocalWorkflowId.yml"
      responses:
        "200":
          description: Workflow configuration retrieved!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWorkflowResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
  /workflows/{localWorkflowId}/exchanges:
    post:
      summary: Creates a new exchange and returns location of exchange metadata in a response header.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: createExchange
      description: Creates a new exchange and returns location of exchange metadata in a response header.
      x-expectedCaller: Owner Coordinator
      parameters:
        - $ref: "./components/parameters/path/LocalWorkflowId.yml"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExchangeRequest"
      responses:
        "201":
          description: Exchange successfully created (with data)
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: The HTTP URL used to retrieve exchange metadata.
                example: https://issuer.example.com/workflows/123/exchanges/abc
        "204":
          description: Exchange successfully created (without data)
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: The HTTP URL used to retrieve exchange metadata.
                example: https://issuer.example.com/workflows/123/exchanges/abc
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
  /workflows/{localWorkflowId}/exchanges/{localExchangeId}:
    get:
      summary: Gets the state of an existing exchange and returns it in the response body.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: getExchangeConfiguration
      description: Gets the configuration of an existing exchange and returns it in the response body.
      x-expectedCaller: Owner Coordinator
      parameters:
        - $ref: "./components/parameters/path/LocalWorkflowId.yml"
        - $ref: "./components/parameters/path/LocalExchangeId.yml"
      responses:
        "200":
          description: Exchange configuration retrieved!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExchangeResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
    post:
      summary: Participate in an exchange. Posting an empty body will start the exchange or return
        what the exchange is expecting to complete the next step. Posting a Verifiable Presentation Request
        will result in either a 4xx error or one of the following - a Verifiable Presentation
        or Verifiable Presentation Request that conforms to the client's request. If a Verifiable Presentation
        is sent, an additional Verifiable Presentation Request may also be sent to continue the exchange.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: participateInExchange
      description: Participate in an exchange. Posting an empty body will start the exchange or return what the exchange is expecting to complete the next step.
      x-expectedCaller: Anyone
      parameters:
        - $ref: "./components/parameters/path/LocalWorkflowId.yml"
        - $ref: "./components/parameters/path/LocalExchangeId.yml"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    verifiablePresentationRequest:
                      $ref: "./components/VerifiablePresentationRequest.yml#/components/schemas/VerifiablePresentationRequest"
                - type: object
                  properties:
                    verifiablePresentation:
                      $ref: "./components/VerifiablePresentation.yml#/components/schemas/VerifiablePresentation"
      responses:
        "200":
          description: Exchange progressed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExchangeParticipationResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
  /workflows/{localWorkflowId}/exchanges/{localExchangeId}/protocols:
    get:
      summary: Gets the supported protocols for interacting with a specific exchange.
      tags:
        - Exchanges
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: getSupportedProtocolsConfiguration
      description: Gets the supported protocols for interacting with a specific exchange.
      x-expectedCaller:
        - Verification Coordinator
        - Holder Coordinator
      parameters:
        - $ref: "./components/parameters/path/LocalWorkflowId.yml"
        - $ref: "./components/parameters/path/LocalExchangeId.yml"
      responses:
        "200":
          description: Protocols understood by the exchange.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExchangeProtocolsResponse"
        "400":
          description: Invalid input
        "401":
          description: Not Authorized
        "500":
          description: Internal Error
components:
  securitySchemes:
    $ref: "./components/SecuritySchemes.yml#/components/securitySchemes"
  schemas:
    CreateWorkflowRequest:
      type: object
      additionalProperties: false
      description: Object containing information for creating a workflow.
      properties:
        id:
          type: string
          description: The ID that will be used for the created workflow. Passing an ID is OPTIONAL.
        initialStep:
          type: string
          description: The step from the above set that the exchange starts on. Passing intialStep is REQUIRED.
        controller:
          type: string
          description: An OPTIONAL property that specifies the root controller of the instance, which can be used by systems supporting authorization mechanisms like Authorization Capabilities (ZCAPs), which rely on object capabilities. This value can be used in conjunction with the <code>authorization</code> property to simultaneously allow other authorization mechanisms.
        authorization:
          type: object
          description: An OPTIONAL property that specifies authorization scheme information for the endpoint, such as an OAuth2 configuration.
          properties:
            oauth2:
              type: object
              description: OAuth2 configuration.
              properties:
                issuerConfigUrl:
                  type: string
                  description: OAuth2 issuer config URL.
        credentialTemplates:
          type: array
          description: One or more VC templates for issuance. Passing credentialTemplates is OPTIONAL.
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of template.
              template:
                type: string
                description: The template itself.
        steps:
          type: object
          description: One or more steps required to complete an exchange on the workflow. Passing the steps object is REQUIRED. The keys are one or more step names, where each STEP_NAME is replaced by the name of a step (such as <code>request-employee-id</code>), and the values are step configurations.
          properties:
            STEP_NAME:
              $ref: "#/components/schemas/WorkflowStep"

    GetWorkflowResponse:
      type: object
      additionalProperties: false
      description: Object containing information about a workflow.
      properties:
        id:
          type: string
          description: The ID that will be used for the created workflow. Passing an ID is OPTIONAL.
        initialStep:
          type: string
          description: The step from the above set that the exchange starts on. Passing intialStep is REQUIRED.
        controller:
          type: string
          description: The controller of the instance. Passing controller is OPTIONAL.
        authorization:
          type: object
          description: Authorization scheme information (e.g., OAuth2 configuration). Passing authorization is OPTIONAL.
          properties:
            oauth2:
              type: object
              description: OAuth2 configuration.
              properties:
                issuerConfigUrl:
                  type: string
                  description: OAuth2 issuer config URL.
        credentialTemplates:
          type: array
          description: One or more VC templates for issuance. Passing credentialTemplates is OPTIONAL.
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of template.
              template:
                type: string
                description: The template itself.
        steps:
          type: object
          description: One or more steps required to complete an exchange on the workflow. The keys are one or more step names, where each STEP_NAME is replaced by the name of a step (such as <code>request-employee-id</code>), and the values are step configurations.
          properties:
            STEP_NAME:
              $ref: "#/components/schemas/WorkflowStep"
    CreateExchangeRequest:
      type: object
      description: Object containing information about the exchange to be created.
      properties:
        expires:
          type: string
          description: The date and time (expressed as an XML Schema dateTimeStamp) that the exchange expires.
        variables:
          $ref: "#/components/schemas/ExchangeVariables"
        openId:
          type: object
          description: Optional parameters to enable OID4* protocol for delivery.
    ExchangeParticipationResponse:
      type: object
      description: Either what the exchange is expecting next or a result of the exchange.
      oneOf:
        - type: object
          properties:
            verifiablePresentationRequest:
              $ref: "./components/VerifiablePresentationRequest.yml#/components/schemas/VerifiablePresentationRequest"
        - type: object
          properties:
            verifiablePresentation:
              $ref: "./components/VerifiablePresentation.yml#/components/schemas/VerifiablePresentation"
        - type: object
          properties:
            redirectUrl:
              type: string
              description: The URL the exchange wishes to redirect the client to.
    GetExchangeProtocolsResponse:
      type: object
      additionalProperties: false
      description: Object containing information about the protocols that can be used to perform a specific exchange.
      properties:
        protocols:
          type: object
          description: An object containing one or more protocols that can be used to perform the specific exchange.
          properties:
            interact:
              type: string
              description: A URL that can be used during exchange flows with a human in the loop. See the section on the <a href="#dfn-interaction-url">interact URL format</a> for more details.
            vcapi:
              type: string
              description: The URL to use when initiating a VC API exchange.
            OID4VP:
              type: string
              description: The URL to use when initiating an OID4VP presentation.
            OID4VCI:
              type: string
              description: The URL to use when initiating an OID4VCI issuance.
    GetExchangeResponse:
      type: object
      additionalProperties: false
      description: Object containing information about an active exchange.
      properties:
        id:
          type: string
          description: The local exchange ID that identifies the exchange.
        sequence:
          type: integer
          description: A sequence number for the exchange. Set to 0 on creation.
        expires:
          type: string
          description: The date and time (expressed as an XML Schema dateTimeStamp) that the exchange expires.
        step:
          type: string
          description: The current step in the exchange.
        state:
          type: string
          description: The status ("pending" | "active" | "complete" | "invalid") of the exchange, set to "pending" on creation.
        variables:
          $ref: "#/components/schemas/ExchangeVariables"
    WorkflowStep:
      type: object
      description: Object containing information about a workflow step.
      oneOf:
        - $ref: "#/components/schemas/StepData"
        - type: object
          properties:
            stepTemplate:
              $ref: "#/components/schemas/StepTemplate"
    StepTemplate:
      type: object
      additionalProperties: false
      description: A template for a workflow step. Either this must be present or the other step data must be present, but not both sets.
      properties:
        type:
          type: string
          description: The type of template.
        template:
          type: string
          description: The step template.
    StepData:
      type: object
      additionalProperties: false
      description: Step data to be included if a template is not used.
      properties:
        createChallenge:
          type: boolean
          description: An optional step directive that tells the exchange to handle challenge management via a VC API verifier service it has a zcap for.
        verifiablePresentationRequest:
          $ref: "./components/VerifiablePresentationRequest.yml#/components/schemas/VerifiablePresentationRequest"
        presentationSchema:
          oneOf:
            - type: object
              description: A JSON Schema describing the validation to be performed on the presentation.
              properties:
                  type:
                    type: string
                    description: The value MUST be <code>JsonSchema</code>.
                  jsonSchema:
                    type: object
                    description: The JSON Schema object to use when validating the presentation.
            - type: object
              description: An alternate presentation schema format to use when validating a presentation in the current step. Additional properties are expected for a specific presentation schema type, but are beyond the scope of this specification.
              properties:
                type:
                  type: string
                  description: The type of presentation schema mechanism to use when validating the presentation.
        verifyPresentationResponseSchema:
          oneOf:
            - type: object
              description: A JSON Schema describing the validation to be performed on the result of verifying the presentation.
              properties:
                  type:
                    type: string
                    description: The value MUST be <code>JsonSchema</code>.
                  jsonSchema:
                    type: object
                    description: The JSON Schema object to use when validating the result of verifying the presentation.
            - type: object
              description: An alternate presentation schema format to use on the result of verifying a presentation in the current step. Additional properties are expected for a specific presentation schema type, but are beyond the scope of this specification.
              properties:
                type:
                  type: string
                  description: The type of presentation schema mechanism to use when validating the result of verifying the presentation.
        nextStep:
          type: string
          description: The name of the next step in the sequence. Passing nextStep is OPTIONAL. This field MUST NOT be present on the final step configuration.
        openId:
          type: object
          description: Optional information to trigger OID4VP
          properties:
            createAuthorizationRequest:
              type: string
              description: If present, identifies the name of the template variable (in <code>variables</code> for an <a href="#create-exchange">exchange</a>) that the auto-generated OpenID for Verifiable Presentations Authorization Request will be stored in for subsequent use in the exchange. Either this or <code>authorizationRequest</code> MUST be present, but not both. The value of the named variable can be lazily generated when the Authorization Request is required, i.e., after the client of the exchange chooses to use the OID4VP protocol. This feature allows the Authorization Request to be generated by reusing values, e.g., a Verifiable Presentation Request, that only need to be specified once across multiple protocol offerings.
            authorizationRequest:
              type: object
              description: If present, an OID4VP Authorization Request for subsequent use in the exchange. Either this or <code>createAuthorizationRequest</code> MUST be present, but not both.
    ExchangeVariables:
      type: object
      description: Variables needed for an exchange.
      properties:
        inputs:
          type: object
          description: Credential inputs for each step of an exchange.
          properties:
            STEP_NAME:
              $ref: '#/components/schemas/ExchangeStepInputs'
        results:
          type: object
          description: Results from each step of an exchange.
          properties:
            STEP_NAME:
              $ref: '#/components/schemas/ExchangeStepResults'
        errors:
          type: object
          description: Errors from each step of an exchange.
          nullable: true
          properties:
            STEP_NAME:
              $ref: '#/components/schemas/ExchangeStepErrors'
    ExchangeStepInputs:
      type: object
      description: Credential inputs for a step of an exchange.
      oneOf:
        - $ref: "./components/Credential.yml#/components/schemas/Credential"
        - type: array
          items:
            $ref: "./components/Credential.yml#/components/schemas/Credential"
    ExchangeStepResults:
      type: object
      description: Results from a step of an exchange.
      properties:
        verifiablePresentation:
          $ref: "./components/VerifiablePresentation.yml#/components/schemas/VerifiablePresentation"
    ExchangeStepErrors:
      type: object
      description: Errors from a step of an exchange.
      properties:
        message:
          type: string
          description: A message describing an error from the exchange step.
        status:
          type: integer
          description: A status number describing an error from the exchange step.
